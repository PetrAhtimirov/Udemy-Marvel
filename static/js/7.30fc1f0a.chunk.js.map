{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelServise","loading","request","error","clearError","process","setProcess","useHttp","setLoading","useState","setError","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","Error","concat","status","data","json","e","message","_apiBase","_apiKey","_baseOffset","_transformCharacter","char","desc","description","substr","id","name","thumbnail","path","extension","homepage","urls","wiki","comics","items","_transformComics","title","pageCount","price","prices","language","textObjects","getAllCharacters","offset","res","results","map","getCharacter","getCharacterByName","getCharacterComics","getAllComics","getComic","AppBanner","_jsxs","className","children","avengers","avengersLogo","ComicsList","comicsList","setComicsList","newItemLoading","setNewItemLoading","setOffset","comicsEnded","setComicsEnded","useEffect","onRequest","initial","then","onComicsListLoaded","newCharList","charList","item","i","Link","to","errorMessage","spinner","Spinner","disabled","onClick","ComicsPage","_Fragment","Helmet","content"],"mappings":"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","file":"static/js/7.30fc1f0a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{ display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto' }} src={img} alt=\"error\" />\n    )\n}\n\nexport default ErrorMessage;","import { useHttp } from '../hooks/http.hook';\n\nconst useMarvelServise = () => {\n    const { loading, request, error, clearError, process, setProcess } =\n        useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=6cd0b5da891a48a4d3f5ae350908e21c';\n    const _baseOffset = 320;\n\n    const _transformCharacter = (char) => {\n        let desc = char.description;\n        if (desc === '') {\n            desc = 'There is no description for this character';\n        }\n        if (desc.length > 160) {\n            desc = `${desc.substr(0, 160)}...`;\n        }\n\n        return {\n            id: char.id,\n            name: char.name,\n            description: desc,\n            thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items,\n        };\n    };\n\n    const _transformComics = (comics) => {\n        return {\n            id: comics.id,\n            title: comics.title,\n            description: comics.description || 'There is no description',\n            pageCount: comics.pageCount\n                ? `${comics.pageCount} p.`\n                : 'No information about the number of pages',\n            price: comics.prices[0].price\n                ? `${comics.prices[0].price}$`\n                : 'Not available',\n            thumbnail: `${comics.thumbnail.path}.${comics.thumbnail.extension}`,\n            language: comics.textObjects.language || 'en-us',\n        };\n    };\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(\n            `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\n        );\n        return res.data.results.map(_transformCharacter);\n    };\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    };\n\n    const getCharacterByName = async (name) => {\n        const res = await request(\n            `${_apiBase}characters?name=${name}&${_apiKey}`\n        );\n        return res.data.results.map(_transformCharacter);\n    };\n\n    const getCharacterComics = async (id) => {\n        const res = await request(\n            `${_apiBase}characters/${id}/comics?orderBy=modified&${_apiKey}`\n        );\n        return res.data.results.map(_transformComics);\n    };\n\n    const getAllComics = async (offset = _baseOffset) => {\n        const res = await request(\n            `${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`\n        );\n        return res.data.results.map(_transformComics);\n    };\n\n    const getComic = async (id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return _transformComics(res.data.results[0]);\n    };\n\n    return {\n        loading,\n        error,\n        clearError,\n        process,\n        setProcess,\n        getAllCharacters,\n        getCharacter,\n        getCharacterByName,\n        getCharacterComics,\n        getAllComics,\n        getComic,\n    };\n};\n\nexport default useMarvelServise;\n","import { useState, useCallback } from 'react';\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [process, setProcess] = useState('waiting');\n\n    const request = useCallback(\n        async (\n            url,\n            method = 'GET',\n            body = null,\n            headers = { 'Content-Type': 'application/json' }\n        ) => {\n            setLoading(true);\n            setProcess('loading');\n\n            try {\n                const response = await fetch(url, { method, body, headers });\n\n                if (!response.ok) {\n                    throw new Error(\n                        `Could not fetch ${url}, status: ${response.status}`\n                    );\n                }\n\n                const data = await response.json();\n\n                setLoading(false);\n                return data;\n            } catch (e) {\n                setLoading(false);\n                setError(e.message);\n                setProcess('error');\n                throw e;\n            }\n        },\n        []\n    );\n\n    const clearError = useCallback(() => {\n        setError(null);\n        setProcess('loading');\n    }, []);\n    return { loading, request, error, clearError, process, setProcess };\n};\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './comicsList.scss';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport useMarvelServise from '../../services/MarvelService';\n\nconst ComicsList = () => {\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(700);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const { loading, error, getAllComics } = useMarvelServise();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, []);\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset).then(onComicsListLoaded);\n    };\n\n    const onComicsListLoaded = (newCharList) => {\n        setComicsList((charList) => [...charList, ...newCharList]);\n        setNewItemLoading(false);\n        setOffset((offset) => offset + 9);\n        setComicsEnded(newCharList.length < 8);\n    };\n\n    const items = comicsList.map((item, i) => {\n        return (\n            <li className=\"comics__item\" key={item.id}>\n                <Link to={`/comics/${item.id}`}>\n                    <img\n                        src={item.thumbnail}\n                        alt={item.title}\n                        className=\"comics__item-img\"\n                    />\n                    <div className=\"comics__item-name\">{item.title}</div>\n                    <div className=\"comics__item-price\">{item.price}</div>\n                </Link>\n            </li>\n        );\n    });\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            <ul className=\"comics__grid\">{items}</ul>\n            <button\n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{ display: comicsEnded ? 'none' : 'block' }}\n                onClick={() => onRequest(offset)}\n            >\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    );\n};\n\nexport default ComicsList;\n","import { Helmet } from 'react-helmet';\n\nimport ComicsList from '../comicsList/ComicsList';\nimport AppBanner from '../appBanner/AppBanner';\n\nconst ComicsPage = () => {\n    return (\n        <>\n            <Helmet>\n                <meta\n                    name=\"description\"\n                    content=\"Page with list of our comics\"\n                />\n                <title>Comics page</title>\n            </Helmet>\n            <AppBanner />\n            <ComicsList />\n        </>\n    );\n};\n\nexport default ComicsPage;\n"],"sourceRoot":""}